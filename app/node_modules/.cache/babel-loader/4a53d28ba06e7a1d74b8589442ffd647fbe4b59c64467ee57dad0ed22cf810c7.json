{"ast":null,"code":"var _jsxFileName = \"E:\\\\Login_App\\\\instagram-app\\\\src\\\\AuthRedirect.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthRedirect = () => {\n  _s();\n  const [searchParams] = useSearchParams();\n  const [message, setMessage] = useState(\"Exchanging code for token...\");\n  useEffect(() => {\n    const code = searchParams.get(\"code\");\n    if (code) {\n      axios.post('http://localhost:5000/api/instagram/token', {\n        code\n      }).then(res => {\n        setMessage(\"Access token received successfully!\");\n        console.log(res.data);\n      }).catch(err => {\n        setMessage(\"Failed to exchange token\");\n        console.error(err);\n      });\n    } else {\n      setMessage(\"No code found in URL\");\n    }\n  }, [searchParams]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      marginTop: \"50px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthRedirect, \"BQK1x4HwGQ+TXma5WbBg1iNnLGE=\", false, function () {\n  return [useSearchParams];\n});\n_c = AuthRedirect;\nexport default AuthRedirect;\nvar _c;\n$RefreshReg$(_c, \"AuthRedirect\");","map":{"version":3,"names":["React","useEffect","useState","useSearchParams","axios","jsxDEV","_jsxDEV","AuthRedirect","_s","searchParams","message","setMessage","code","get","post","then","res","console","log","data","catch","err","error","style","textAlign","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/Login_App/instagram-app/src/AuthRedirect.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useSearchParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst AuthRedirect = () => {\r\n  const [searchParams] = useSearchParams();\r\n  const [message, setMessage] = useState(\"Exchanging code for token...\");\r\n\r\n  useEffect(() => {\r\n    const code = searchParams.get(\"code\");\r\n\r\n    if (code) {\r\n      axios.post('http://localhost:5000/api/instagram/token', { code })\r\n        .then(res => {\r\n          setMessage(\"Access token received successfully!\");\r\n          console.log(res.data);\r\n        })\r\n        .catch(err => {\r\n          setMessage(\"Failed to exchange token\");\r\n          console.error(err);\r\n        });\r\n    } else {\r\n      setMessage(\"No code found in URL\");\r\n    }\r\n  }, [searchParams]);\r\n\r\n  return (\r\n    <div style={{ textAlign: \"center\", marginTop: \"50px\" }}>\r\n      <h2>{message}</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthRedirect;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,eAAe,QAAQ,kBAAkB;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,YAAY,CAAC,GAAGN,eAAe,CAAC,CAAC;EACxC,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,8BAA8B,CAAC;EAEtED,SAAS,CAAC,MAAM;IACd,MAAMW,IAAI,GAAGH,YAAY,CAACI,GAAG,CAAC,MAAM,CAAC;IAErC,IAAID,IAAI,EAAE;MACRR,KAAK,CAACU,IAAI,CAAC,2CAA2C,EAAE;QAAEF;MAAK,CAAC,CAAC,CAC9DG,IAAI,CAACC,GAAG,IAAI;QACXL,UAAU,CAAC,qCAAqC,CAAC;QACjDM,OAAO,CAACC,GAAG,CAACF,GAAG,CAACG,IAAI,CAAC;MACvB,CAAC,CAAC,CACDC,KAAK,CAACC,GAAG,IAAI;QACZV,UAAU,CAAC,0BAA0B,CAAC;QACtCM,OAAO,CAACK,KAAK,CAACD,GAAG,CAAC;MACpB,CAAC,CAAC;IACN,CAAC,MAAM;MACLV,UAAU,CAAC,sBAAsB,CAAC;IACpC;EACF,CAAC,EAAE,CAACF,YAAY,CAAC,CAAC;EAElB,oBACEH,OAAA;IAAKiB,KAAK,EAAE;MAAEC,SAAS,EAAE,QAAQ;MAAEC,SAAS,EAAE;IAAO,CAAE;IAAAC,QAAA,eACrDpB,OAAA;MAAAoB,QAAA,EAAKhB;IAAO;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACf,CAAC;AAEV,CAAC;AAACtB,EAAA,CA3BID,YAAY;EAAA,QACOJ,eAAe;AAAA;AAAA4B,EAAA,GADlCxB,YAAY;AA6BlB,eAAeA,YAAY;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}